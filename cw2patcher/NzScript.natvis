<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="Variant">
		<DisplayString
			Condition="Type == Variant::DataType::Int">
			{Int}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::Long">
			{Long}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::Float">
			{Float}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::Double">
			{Double}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::Object">
			{Object}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::InternMethod">
			{InternMethod}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::String">
			{((GCString*)Object)->Pointer}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::FuncPC">
			PC:{Pointer}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::ReturnPC">
			LR:{Pointer}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::Ptr">
			Ptr:{Pointer}
		</DisplayString>
		<DisplayString
			Condition="Type == Variant::DataType::Null">
			{Null}
		</DisplayString>
		<DisplayString>Corrupted.</DisplayString>
		<Expand>
			<Item Name="Type">Type</Item>
			<Item Name="Int"
				Condition="Type == Variant::DataType::Int">
				Int
			</Item>
			<Item Name="Long"
				Condition="Type == Variant::DataType::Long">
				Long
			</Item>
			<Item Name="Float"
				Condition="Type == Variant::DataType::Float">
				Float
			</Item>
			<Item Name="Double"
				Condition="Type == Variant::DataType::Double">
				Double
			</Item>
			<Item Name="Object"
				Condition="Type == Variant::DataType::Object">
				Object
			</Item>
			<Item Name="InternMethod"
				Condition="Type == Variant::DataType::InternMethod">
				InternMethod
			</Item>
			<Item Name="String"
				Condition="Type == Variant::DataType::String">
				((GCString*)Object)->Pointer
			</Item>
			<Item Name="PC"
				Condition="Type == Variant::DataType::ReturnPC || Type == Variant::DataType::FuncPC">
				Pointer
			</Item>
		</Expand>
	</Type>
	<Type Name="SimpStack">
		<DisplayString>{{size = {sp}}}</DisplayString>
		<Expand>
			<Item Name="[BP]">
				bp
			</Item>
			<Item Name="[BP2]">
				bp2
			</Item>
			<Item Name="[SP]">
				sp
			</Item>
			<Item Name="[LR]" Condition="bp2 >= 3">
				ptr[bp2 - 1]
			</Item>
			<Item Name="[last_BP2]" Condition="bp2 >= 3">
				ptr[bp2 - 2]
			</Item>
			<Item Name="[last_BP]" Condition="bp2 >= 3">
				ptr[bp2 - 3]
			</Item>
			<Item Name="[Top]" Condition="sp > 0">
				ptr[sp - 1]
			</Item>
			<ArrayItems>
				<Size>sp</Size>
				<ValuePointer>ptr</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>
	<Type Name="ScriptArray">
		<DisplayString>{{size = {Variants.size()}}}</DisplayString>
		<Expand>
			<Item Name="[size]">
				Variants.size()
			</Item>
			<ArrayItems>
				<Size>Variants.size()</Size>
				<ValuePointer>Variants._Mypair._Myval2._Myfirst</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>
	<Type Name="ScriptObject">
		<DisplayString>{{size = {Fields.size()}}}</DisplayString>
		<Expand>
			<Item Name="[size]">
				Fields.size()
			</Item>
		</Expand>
	</Type>
	<Type Name="GCString">
		<DisplayString>{Pointer}</DisplayString>
		<Expand>
			<Item Name="[pointer]">
				Pointer
			</Item>
		</Expand>
	</Type>
	<Type Name="ir::Interpreter">
		<DisplayString>{{PC = {PC}}}</DisplayString>
		<Expand>
			<Item Name="[pc]">
				PC
			</Item>
			<Item Name="[stack]">
				Stack
			</Item>
		</Expand>
	</Type>
</AutoVisualizer>